<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_design_topic">
    <sys_cb_design_topic action="INSERT_OR_UPDATE">
        <compiled_topic display_value="Deregister for opportunity">9ff0e43ddb68901054892957489619a2</compiled_topic>
        <design_definition>{"type":"FlowTopic","triggers":[{"type":"Trigger","name":"7d004ecdcc2e4fea85e0cd04a31fd632","triggerType":"request","applicability":{"type":"Applicability","mode":"script","value":"true"},"id":"7d004ecdcc2e4fea85e0cd04a31fd632"}],"goals":[{"name":"primary","trigger_id":"7d004ecdcc2e4fea85e0cd04a31fd632","nodes":[{"type":"StartGoal","goal_id":"64c401e9bdb94cbfbd5262e67199cdfc","greeting_msg":{"type":"String","mode":"string","value":""},"id":"745027bac2c641738fd42df16e34bb48","name":"Start"},{"type":"TerminateGoal","goal_id":"64c401e9bdb94cbfbd5262e67199cdfc","confirmation_msg":{"type":"String","mode":"string","value":"gs.getMessageLang(\"Deregistration is complete. Look forward to your participation in another initiative.\", vaContext.getRequesterLang())"},"id":"e0576b0aacd747399c1ae4e59df8baba","name":"End"},{"type":"ReferenceChoiceInputPrompt","mode":"external","id":"18fd8378f39c41d0997d1819f71be7d2","name":"Select Phil","goal_id":"64c401e9bdb94cbfbd5262e67199cdfc","applicability":{"type":"Applicability","mode":"script","value":"true"},"variable_id":"5566ff57fdca43bbad268e0d8ee225da","message":{"type":"String","mode":"string","value":"Below are the initiatives you are registered for."},"acknowledgement":{"type":"String","mode":"string","value":"ok"},"optional":false,"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":false},"expression_mode":"script","script":"(function execute() {\n    /* Code your script logic here. For example, you might want to call an external web service\n       to find the beet local Italian restaurants.  Call a Restaurants Web Service then use the results\n       to populate an options array.\n       \n        var options = [];    \n        options.push({ 'value': 'best_italian_1', 'label': gs.getMessage('Best Italian Restaurant Ever') });\n        options.push({ 'value': 'best_italian_2', 'label': gs.getMessage('Even Better Italian Restaurant') });\n        return options;\n    */\n\n   var options = new PhilUtil().buildderegisterOption(vaInputs.user);\n    return options; \n})()\n","no_options_found_message":{"type":"String","mode":"string","value":"No open opportunities yet. Please come back later."},"condition":{"type":"Condition","mode":"external_script","value":"(function execute() {\n    /* Code your script logic here. For example, you might want to call an external web service\n       to find the beet local Italian restaurants.  Call a Restaurants Web Service then use the results\n       to populate an options array.\n       \n        var options = [];    \n        options.push({ 'value': 'best_italian_1', 'label': gs.getMessage('Best Italian Restaurant Ever') });\n        options.push({ 'value': 'best_italian_2', 'label': gs.getMessage('Even Better Italian Restaurant') });\n        return options;\n    */\n\n   var options = new PhilUtil().buildderegisterOption(vaInputs.user);\n    return options; \n})()\n"}},{"type":"CRUDAction","mode":"read","read_mode":"variable","query":"sys_id={{vaInputs.select_phil}}","variable_id":"e7a14715b60a441b84c9bf43ff8c4356","id":"21036f2024504d5080c961b0d679b247","name":"Look Up phil in the table","goal_id":"64c401e9bdb94cbfbd5262e67199cdfc","applicability":{"type":"Applicability","mode":"script","value":"true"},"condition":{"type":"Condition","mode":"glide_query","value":"sys_id={{vaInputs.select_phil}}"}},{"type":"ScriptedAction","script":"(function execute() {\n    /* Code your scripted action here. For example, you might update a \n       record based on conditional logic:\n    \n        if (vaVars.my_flag == 'say hello') {\n            gs.info('hi there');\n        } else {\n            gs.info('bye now');\n        }\n    */\n    var currentUser = gs.getUser();\n    var watch_list;\n    var gr = new GlideRecord('x_snc_econow_philanthrophy');\n    gr.addQuery('sys_id',vaInputs.look_up_phil_in_the_table.getValue());\n    gr.query();\n    if(gr.next())\n    {\n       // gs.info('16 hi there-'+vaInputs.look_up_phil_in_the_table.getValue() + '   '+ vaInputs.user.getDisplayValue());\n        watch_list = gr.watch_list.toString().split(\",\");\n       // watch_list.push(gs.getUserID());\n       var index = watch_list.indexOf(gs.getUserID());\n       watch_list.splice(index, 32);\n        gr.watch_list = watch_list.join(\",\").toString();\n        \n        gr.update();\n    }\n\n   // var watch_list = current.watch_list.toString().split(\",\");\n    //     if (watch_list.toString().indexOf(currentUser.getDisplayName()) == -1) {\n    //         watch_list.push(currentUser.getDisplayName());\n    //         current.watch_list = watch_list.join(\",\").toString();\n    //     }\n\n//\t\tvar index = watch_list.indexOf(gs.getUserID()); // &lt;-- Not supported in &lt;IE9\n//    if (index !== -1) {\n       \n    \n    //phil.update();\n})()    \n","id":"a2b6b821fc1946f68c5e5862cac83bba","name":"Update Phil via script","goal_id":"64c401e9bdb94cbfbd5262e67199cdfc","applicability":{"type":"Applicability","mode":"script","value":"true"}}],"edges":[{"type":"Edge","source_node_id":"21036f2024504d5080c961b0d679b247","target_node_id":"a2b6b821fc1946f68c5e5862cac83bba","id":"8a5d54adcba548489d38fab0e3d6c63f"},{"type":"Edge","source_node_id":"745027bac2c641738fd42df16e34bb48","target_node_id":"18fd8378f39c41d0997d1819f71be7d2","id":"c3c61f3dcc3b44c391c4920ca7fe9f4a"},{"type":"Edge","source_node_id":"18fd8378f39c41d0997d1819f71be7d2","target_node_id":"21036f2024504d5080c961b0d679b247","id":"5f79bdb845b849769111c1acc8ac6c78"},{"type":"Edge","source_node_id":"a2b6b821fc1946f68c5e5862cac83bba","target_node_id":"e0576b0aacd747399c1ae4e59df8baba","id":"642db439584342bda9b33611739a88a1"}],"id":"64c401e9bdb94cbfbd5262e67199cdfc"}],"script_variables":[],"glide_variables":[{"type":"Reference","table":"sys_user","id":"3fc28c03702e424faa198b0f9c4d767e","name":"user"},{"type":"Choice","choices":[],"id":"5566ff57fdca43bbad268e0d8ee225da","name":"select_phil","table":""},{"type":"Reference","table":"x_snc_econow_philanthrophy","id":"e7a14715b60a441b84c9bf43ff8c4356","name":"look_up_phil_in_the_table"}],"applicability":{"type":"Applicability","mode":"script","value":"true"},"roles":[],"scope":"1cc25741db2050105489295748961900","domain":"global","id":"a39e5c79db689010548929574896197d","name":"Deregister for opportunity","key_phrases":["remove me philanthropy","deregister opportunity","remove me from initiative","deregister opportunity"],"nlu_provider":"","nlu_model":"","nlu_model_label":"","nlu_intent":"","nlu_intent_label":"","flexible_conversation_switching":false,"design_category":"640c782ddbec5010548929574896194e","library":false}</design_definition>
        <design_topic_id>a39e5c79db689010548929574896197d</design_topic_id>
        <name>Deregister for opportunity</name>
        <sys_class_name>sys_cb_design_topic</sys_class_name>
        <sys_created_by>arnav</sys_created_by>
        <sys_created_on>2020-05-03 16:34:30</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>13f0e43ddb68901054892957489619a7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FlowTopic</sys_name>
        <sys_package display_value="EcoNow" source="x_snc_econow">1cc25741db2050105489295748961900</sys_package>
        <sys_policy/>
        <sys_scope display_value="EcoNow">1cc25741db2050105489295748961900</sys_scope>
        <sys_update_name>sys_cb_design_topic_13f0e43ddb68901054892957489619a7</sys_update_name>
        <sys_updated_by>arnav</sys_updated_by>
        <sys_updated_on>2020-05-03 16:34:30</sys_updated_on>
        <type>FlowTopic</type>
    </sys_cb_design_topic>
</record_update>
